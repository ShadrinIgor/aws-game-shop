{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Product service",
    "description": "Get informations of games",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Shadrin Igor"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "a5t41oeksj.execute-api.us-east-1.amazonaws.com",
  "basePath": "/dev",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/products": {
      "get": {
        "description": "Returns list of games",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Returns a game by id",
        "operationId": "getProductById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of game",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "required": [
        "id",
        "image",
        "name",
        "price",
        "description"
      ],
      "properties": {
        "id": {
          "type": "number",
          "format": "id",
          "example": 1
        },
        "image": {
          "type": "string",
          "example": "http://same_url"
        },
        "price": {
          "type": "number",
          "format": "float",
          "example": 50
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "statusCode"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 500
        }
      }
    }
  }
}

